% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare_vb_mle.R
\name{compare_vb_mle}
\alias{compare_vb_mle}
\title{Compare Von Bertalanffy Growth Parameters Between Groups Using Bootstrap Permutation Test}
\usage{
compare_vb_mle(
  age,
  length,
  group,
  sex = NULL,
  n_bootstrap = 1000,
  parameters = c("Linf", "k", "t0", "CV"),
  alpha = 0.05,
  verbose = TRUE,
  seed = NULL,
  min_obs = 50,
  age_stratified = TRUE,
  age_bin_width = 2,
  test_curves = TRUE,
  curve_ages = NULL
)
}
\arguments{
\item{age}{A numeric vector of ages}

\item{length}{A numeric vector of lengths}

\item{group}{A factor or character vector specifying the group for each observation}

\item{sex}{Optional factor or character vector specifying sex for each observation (for sex-specific models)}

\item{n_bootstrap}{Number of bootstrap permutations (default 1000)}

\item{parameters}{Character vector of parameters to test. Options: "Linf", "k", "t0", "CV" (default all).
For sex models, parameters are automatically expanded to sex-specific versions (e.g., "Linf_M", "Linf_F")}

\item{alpha}{Significance level for the test (default 0.05)}

\item{verbose}{Logical, whether to print progress messages (default TRUE)}

\item{seed}{Optional seed for reproducible results}

\item{min_obs}{Minimum number of observations required per sex/group combination (default 50).
Combinations with fewer observations will be removed before analysis}

\item{age_stratified}{Logical, whether to use age-stratified permutation (default TRUE).
When TRUE, permutations are performed within age bins to maintain age distribution}

\item{age_bin_width}{Width of age bins in years for stratified permutation (default 2).
Only used when age_stratified = TRUE. Each bin will span this many years.}

\item{test_curves}{Logical, whether to test for differences in growth curves (default TRUE).
This performs a permutation test on the maximum absolute deviance between fitted curves}

\item{curve_ages}{Optional numeric vector of ages at which to evaluate curves for comparison.
If NULL, uses a sequence from min to max age with 0.5 year increments}
}
\value{
A list containing:
\itemize{
\item \code{observed_diffs}: Observed differences between groups for each parameter
\item \code{p_values}: P-values for each parameter comparison
\item \code{significant}: Logical indicating which parameters show significant differences
\item \code{group_parameters}: Parameter estimates for each group
\item \code{null_distributions}: Bootstrap null distributions for each parameter
\item \code{curve_comparison}: Results from growth curve comparison test (if test_curves = TRUE)
\item \code{method_info}: Information about the test method and settings
}
}
\description{
This function performs a bootstrap permutation test to evaluate whether von Bertalanffy
growth parameters differ significantly between two or more groups. The test compares
the observed differences in parameters against a null distribution generated by
randomly permuting group labels.
}
\details{
The function fits separate von Bertalanffy models to each group, then performs
a bootstrap permutation test by:
\enumerate{
\item Computing observed parameter differences between groups
\item Randomly permuting group labels n_bootstrap times (with optional age stratification)
\item Fitting models to each permuted dataset
\item Computing parameter differences for each permutation
\item Calculating p-values as the proportion of permuted differences
that exceed the observed differences
}

age bins to ensure that age distributions remain comparable between groups.
This is crucial for validity as it tests differences in growth parameters
rather than differences in age distribution. Age bins are created using
\code{age_bin_width} to define the width of each bin in years.

For multiple groups, the test statistic is the maximum pairwise difference
between any two groups for each parameter.
}
\examples{
\dontrun{
# Simulate data for two groups with different growth parameters
set.seed(123)
n_per_group <- 50
age1 <- runif(n_per_group, 1, 15)
age2 <- runif(n_per_group, 1, 15)

# Group 1: Linf=100, k=0.2
length1 <- 100 * (1 - exp(-0.2 * (age1 - (-0.5)))) + rnorm(n_per_group, 0, 8)
# Group 2: Linf=120, k=0.15 (different parameters)
length2 <- 120 * (1 - exp(-0.15 * (age2 - (-0.5)))) + rnorm(n_per_group, 0, 10)

age <- c(age1, age2)
length <- c(length1, length2)
group <- rep(c("Population_A", "Population_B"), each = n_per_group)

# Test for differences in basic parameters
result <- compare_vb_mle(
  age = age, length = length, group = group,
  n_bootstrap = 500, seed = 123
)

# Test with sex-specific models
sex <- rep(c("M", "F"), length.out = length(age))
result_sex <- compare_vb_mle(
  age = age, length = length, group = group, sex = sex,
  n_bootstrap = 500, seed = 123
)

# View results
print(result$p_values)
print(result$significant)
print(result$group_parameters)
}

}
